// automatically generated by the FlatBuffers compiler, do not modify

package com.example.game.networking.i9e;

import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

import javax.annotation.Nullable;

@SuppressWarnings("unused")

@javax.annotation.Generated(value = "flatc")
public final class OppResponse extends Table {
    public static void ValidateVersion() {
        Constants.FLATBUFFERS_1_11_1();
    }

    public static OppResponse getRootAsOppResponse(ByteBuffer _bb) {
        return getRootAsOppResponse(_bb, new OppResponse());
    }

    public static OppResponse getRootAsOppResponse(ByteBuffer _bb, OppResponse obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        __reset(_i, _bb);
    }

    public OppResponse __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public byte respType() {
        int o = __offset(4);
        return o != 0 ? bb.get(o + bb_pos) : 0;
    }

    public @Nullable
    Table resp(Table obj) {
        int o = __offset(6);
        return o != 0 ? __union(obj, o) : null;
    }

    public static int createOppResponse(FlatBufferBuilder builder,
                                        byte resp_type,
                                        int respOffset) {
        builder.startTable(2);
        OppResponse.addResp(builder, respOffset);
        OppResponse.addRespType(builder, resp_type);
        return OppResponse.endOppResponse(builder);
    }

    public static void startOppResponse(FlatBufferBuilder builder) {
        builder.startTable(2);
    }

    public static void addRespType(FlatBufferBuilder builder, byte respType) {
        builder.addByte(0, respType, 0);
    }

    public static void addResp(FlatBufferBuilder builder, int respOffset) {
        builder.addOffset(1, respOffset, 0);
    }

    public static int endOppResponse(FlatBufferBuilder builder) {
        int o = builder.endTable();
        return o;
    }
}

