// automatically generated by the FlatBuffers compiler, do not modify

package com.example.game.networking.i9e;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

import javax.annotation.Nullable;

@SuppressWarnings("unused")

@javax.annotation.Generated(value = "flatc")
public final class CrResponse extends Table {
    public static void ValidateVersion() {
        Constants.FLATBUFFERS_1_12_0();
    }

    public static CrResponse getRootAsCrResponse(ByteBuffer _bb) {
        return getRootAsCrResponse(_bb, new CrResponse());
    }

    public static CrResponse getRootAsCrResponse(ByteBuffer _bb, CrResponse obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        __reset(_i, _bb);
    }

    public CrResponse __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public byte respType() {
        int o = __offset(4);
        return o != 0 ? bb.get(o + bb_pos) : 0;
    }

    public @Nullable
    Table resp(Table obj) {
        int o = __offset(6);
        return o != 0 ? __union(obj, o + bb_pos) : null;
    }

    public static int createCrResponse(FlatBufferBuilder builder,
                                       byte resp_type,
                                       int respOffset) {
        builder.startTable(2);
        CrResponse.addResp(builder, respOffset);
        CrResponse.addRespType(builder, resp_type);
        return CrResponse.endCrResponse(builder);
    }

    public static void startCrResponse(FlatBufferBuilder builder) {
        builder.startTable(2);
    }

    public static void addRespType(FlatBufferBuilder builder, byte respType) {
        builder.addByte(0, respType, 0);
    }

    public static void addResp(FlatBufferBuilder builder, int respOffset) {
        builder.addOffset(1, respOffset, 0);
    }

    public static int endCrResponse(FlatBufferBuilder builder) {
        int o = builder.endTable();
        return o;
    }

    public static final class Vector extends BaseVector {
        public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) {
            __reset(_vector, _element_size, _bb);
            return this;
        }

        public CrResponse get(int j) {
            return get(new CrResponse(), j);
        }

        public CrResponse get(CrResponse obj, int j) {
            return obj.__assign(__indirect(__element(j), bb), bb);
        }
    }
}

