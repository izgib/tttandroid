// automatically generated by the FlatBuffers compiler, do not modify

package com.example.transport;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

import javax.annotation.Nullable;

@SuppressWarnings("unused")
public final class GameId extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static GameId getRootAsGameId(ByteBuffer _bb) { return getRootAsGameId(_bb, new GameId()); }
  public static GameId getRootAsGameId(ByteBuffer _bb, GameId obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public GameId __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short ID() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) : 0; }

  public static int createGameId(FlatBufferBuilder builder,
      short ID) {
    builder.startTable(1);
    GameId.addID(builder, ID);
    return GameId.endGameId(builder);
  }

  public static void startGameId(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addID(FlatBufferBuilder builder, short ID) { builder.addShort(0, ID, 0); }
  public static int endGameId(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public GameId get(int j) { return get(new GameId(), j); }
    public GameId get(GameId obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

