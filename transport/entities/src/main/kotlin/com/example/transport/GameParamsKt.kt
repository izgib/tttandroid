//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: base.proto

package com.example.transport;

@kotlin.jvm.JvmName("-initializegameParams")
public inline fun gameParams(block: com.example.transport.GameParamsKt.Dsl.() -> kotlin.Unit): com.example.transport.GameParams =
  com.example.transport.GameParamsKt.Dsl._create(com.example.transport.GameParams.newBuilder()).apply { block() }._build()
public object GameParamsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.example.transport.GameParams.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.example.transport.GameParams.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.example.transport.GameParams = _builder.build()

    /**
     * <code>uint32 rows = 1;</code>
     */
    public var rows: kotlin.Int
      @JvmName("getRows")
      get() = _builder.getRows()
      @JvmName("setRows")
      set(value) {
        _builder.setRows(value)
      }
    /**
     * <code>uint32 rows = 1;</code>
     */
    public fun clearRows() {
      _builder.clearRows()
    }

    /**
     * <code>uint32 cols = 2;</code>
     */
    public var cols: kotlin.Int
      @JvmName("getCols")
      get() = _builder.getCols()
      @JvmName("setCols")
      set(value) {
        _builder.setCols(value)
      }
    /**
     * <code>uint32 cols = 2;</code>
     */
    public fun clearCols() {
      _builder.clearCols()
    }

    /**
     * <code>uint32 win = 3;</code>
     */
    public var win: kotlin.Int
      @JvmName("getWin")
      get() = _builder.getWin()
      @JvmName("setWin")
      set(value) {
        _builder.setWin(value)
      }
    /**
     * <code>uint32 win = 3;</code>
     */
    public fun clearWin() {
      _builder.clearWin()
    }

    /**
     * <code>.base.MarkType mark = 4;</code>
     */
    public var mark: com.example.transport.MarkType
      @JvmName("getMark")
      get() = _builder.getMark()
      @JvmName("setMark")
      set(value) {
        _builder.setMark(value)
      }
    /**
     * <code>.base.MarkType mark = 4;</code>
     */
    public fun clearMark() {
      _builder.clearMark()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.example.transport.GameParams.copy(block: com.example.transport.GameParamsKt.Dsl.() -> kotlin.Unit): com.example.transport.GameParams =
  com.example.transport.GameParamsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

