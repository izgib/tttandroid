// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: base.proto

package com.example.transport;

/**
 * Protobuf type {@code base.WinLine}
 */
public  final class WinLine extends
    com.google.protobuf.GeneratedMessageLite<
        WinLine, WinLine.Builder> implements
    // @@protoc_insertion_point(message_implements:base.WinLine)
    WinLineOrBuilder {
  private WinLine() {
  }
  private int bitField0_;
  public static final int MARK_FIELD_NUMBER = 1;
  private int mark_;
  /**
   * <code>.base.MarkType mark = 1;</code>
   * @return The enum numeric value on the wire for mark.
   */
  @java.lang.Override
  public int getMarkValue() {
    return mark_;
  }
  /**
   * <code>.base.MarkType mark = 1;</code>
   * @return The mark.
   */
  @java.lang.Override
  public com.example.transport.MarkType getMark() {
    com.example.transport.MarkType result = com.example.transport.MarkType.forNumber(mark_);
    return result == null ? com.example.transport.MarkType.UNRECOGNIZED : result;
  }
  /**
   * <code>.base.MarkType mark = 1;</code>
   * @param value The enum numeric value on the wire for mark to set.
   */
  private void setMarkValue(int value) {
      mark_ = value;
  }
  /**
   * <code>.base.MarkType mark = 1;</code>
   * @param value The mark to set.
   */
  private void setMark(com.example.transport.MarkType value) {
    mark_ = value.getNumber();
    
  }
  /**
   * <code>.base.MarkType mark = 1;</code>
   */
  private void clearMark() {
    
    mark_ = 0;
  }

  public static final int START_FIELD_NUMBER = 2;
  private com.example.transport.Move start_;
  /**
   * <code>optional .base.Move start = 2;</code>
   */
  @java.lang.Override
  public boolean hasStart() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <code>optional .base.Move start = 2;</code>
   */
  @java.lang.Override
  public com.example.transport.Move getStart() {
    return start_ == null ? com.example.transport.Move.getDefaultInstance() : start_;
  }
  /**
   * <code>optional .base.Move start = 2;</code>
   */
  private void setStart(com.example.transport.Move value) {
    value.getClass();
  start_ = value;
    bitField0_ |= 0x00000001;
    }
  /**
   * <code>optional .base.Move start = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeStart(com.example.transport.Move value) {
    value.getClass();
  if (start_ != null &&
        start_ != com.example.transport.Move.getDefaultInstance()) {
      start_ =
        com.example.transport.Move.newBuilder(start_).mergeFrom(value).buildPartial();
    } else {
      start_ = value;
    }
    bitField0_ |= 0x00000001;
  }
  /**
   * <code>optional .base.Move start = 2;</code>
   */
  private void clearStart() {  start_ = null;
    bitField0_ = (bitField0_ & ~0x00000001);
  }

  public static final int END_FIELD_NUMBER = 3;
  private com.example.transport.Move end_;
  /**
   * <code>optional .base.Move end = 3;</code>
   */
  @java.lang.Override
  public boolean hasEnd() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional .base.Move end = 3;</code>
   */
  @java.lang.Override
  public com.example.transport.Move getEnd() {
    return end_ == null ? com.example.transport.Move.getDefaultInstance() : end_;
  }
  /**
   * <code>optional .base.Move end = 3;</code>
   */
  private void setEnd(com.example.transport.Move value) {
    value.getClass();
  end_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <code>optional .base.Move end = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeEnd(com.example.transport.Move value) {
    value.getClass();
  if (end_ != null &&
        end_ != com.example.transport.Move.getDefaultInstance()) {
      end_ =
        com.example.transport.Move.newBuilder(end_).mergeFrom(value).buildPartial();
    } else {
      end_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <code>optional .base.Move end = 3;</code>
   */
  private void clearEnd() {  end_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static com.example.transport.WinLine parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.example.transport.WinLine parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.example.transport.WinLine parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.example.transport.WinLine parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.example.transport.WinLine parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.example.transport.WinLine parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.example.transport.WinLine parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.example.transport.WinLine parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.example.transport.WinLine parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.example.transport.WinLine parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.example.transport.WinLine parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.example.transport.WinLine parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.example.transport.WinLine prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code base.WinLine}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.example.transport.WinLine, Builder> implements
      // @@protoc_insertion_point(builder_implements:base.WinLine)
      com.example.transport.WinLineOrBuilder {
    // Construct using com.example.transport.WinLine.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>.base.MarkType mark = 1;</code>
     * @return The enum numeric value on the wire for mark.
     */
    @java.lang.Override
    public int getMarkValue() {
      return instance.getMarkValue();
    }
    /**
     * <code>.base.MarkType mark = 1;</code>
     * @param value The mark to set.
     * @return This builder for chaining.
     */
    public Builder setMarkValue(int value) {
      copyOnWrite();
      instance.setMarkValue(value);
      return this;
    }
    /**
     * <code>.base.MarkType mark = 1;</code>
     * @return The mark.
     */
    @java.lang.Override
    public com.example.transport.MarkType getMark() {
      return instance.getMark();
    }
    /**
     * <code>.base.MarkType mark = 1;</code>
     * @param value The enum numeric value on the wire for mark to set.
     * @return This builder for chaining.
     */
    public Builder setMark(com.example.transport.MarkType value) {
      copyOnWrite();
      instance.setMark(value);
      return this;
    }
    /**
     * <code>.base.MarkType mark = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMark() {
      copyOnWrite();
      instance.clearMark();
      return this;
    }

    /**
     * <code>optional .base.Move start = 2;</code>
     */
    @java.lang.Override
    public boolean hasStart() {
      return instance.hasStart();
    }
    /**
     * <code>optional .base.Move start = 2;</code>
     */
    @java.lang.Override
    public com.example.transport.Move getStart() {
      return instance.getStart();
    }
    /**
     * <code>optional .base.Move start = 2;</code>
     */
    public Builder setStart(com.example.transport.Move value) {
      copyOnWrite();
      instance.setStart(value);
      return this;
      }
    /**
     * <code>optional .base.Move start = 2;</code>
     */
    public Builder setStart(
        com.example.transport.Move.Builder builderForValue) {
      copyOnWrite();
      instance.setStart(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .base.Move start = 2;</code>
     */
    public Builder mergeStart(com.example.transport.Move value) {
      copyOnWrite();
      instance.mergeStart(value);
      return this;
    }
    /**
     * <code>optional .base.Move start = 2;</code>
     */
    public Builder clearStart() {  copyOnWrite();
      instance.clearStart();
      return this;
    }

    /**
     * <code>optional .base.Move end = 3;</code>
     */
    @java.lang.Override
    public boolean hasEnd() {
      return instance.hasEnd();
    }
    /**
     * <code>optional .base.Move end = 3;</code>
     */
    @java.lang.Override
    public com.example.transport.Move getEnd() {
      return instance.getEnd();
    }
    /**
     * <code>optional .base.Move end = 3;</code>
     */
    public Builder setEnd(com.example.transport.Move value) {
      copyOnWrite();
      instance.setEnd(value);
      return this;
      }
    /**
     * <code>optional .base.Move end = 3;</code>
     */
    public Builder setEnd(
        com.example.transport.Move.Builder builderForValue) {
      copyOnWrite();
      instance.setEnd(builderForValue.build());
      return this;
    }
    /**
     * <code>optional .base.Move end = 3;</code>
     */
    public Builder mergeEnd(com.example.transport.Move value) {
      copyOnWrite();
      instance.mergeEnd(value);
      return this;
    }
    /**
     * <code>optional .base.Move end = 3;</code>
     */
    public Builder clearEnd() {  copyOnWrite();
      instance.clearEnd();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:base.WinLine)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.example.transport.WinLine();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "mark_",
            "start_",
            "end_",
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\f\u0002\u1009" +
              "\u0000\u0003\u1009\u0001";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.example.transport.WinLine> parser = PARSER;
        if (parser == null) {
          synchronized (com.example.transport.WinLine.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.example.transport.WinLine>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:base.WinLine)
  private static final com.example.transport.WinLine DEFAULT_INSTANCE;
  static {
    WinLine defaultInstance = new WinLine();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      WinLine.class, defaultInstance);
  }

  public static com.example.transport.WinLine getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<WinLine> PARSER;

  public static com.google.protobuf.Parser<WinLine> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

